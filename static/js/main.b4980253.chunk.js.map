{"version":3,"sources":["constants.js","Sidebar/AddSongButton/AddSongButton.js","Sidebar/SongButton/SongButton.js","Sidebar/Sidebar.js","Dashboard/AddWidget/AddWidget.js","Dashboard/DashboardButtons/DashboardButtons.js","Dashboard/Dashboard.js","APIs/spotifyAPI.js","SelectMenus/SongSelectMenu/SearchBar/SearchBar.js","SelectMenus/SongSelectMenu/TrackResult/TrackResult.js","SelectMenus/SongSelectMenu/SelectedTrack/SelectedTrack.js","helpers.js","SelectMenus/SongSelectMenu/SongSelect.js","SelectMenus/WidgetSelectMenu/Checkbox/Checkbox.js","SelectMenus/WidgetSelectMenu/VisualOptions/VisualOptions.js","SelectMenus/WidgetSelectMenu/FeatureOptions/FeatureOptions.js","Charts/Bar/Bar.js","Charts/PlainText/PlainText.js","Dashboard/Widget/Widget.js","SelectMenus/WidgetSelectMenu/WidgetSelect.js","SelectMenus/Error/ErrorModal.js","SelectMenus/Modal/Modal.js","App.js","reportWebVitals.js","redux/reducers/songListReducer.js","redux/reducers/songIdToDashboardReducer.js","redux/reducers/modalReducer.js","redux/reducers/currentSongReducer.js","redux/reducers/tokenReducer.js","redux/reducers/dashboardReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["Colors","StaticColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","result","count","prop","this","names","Math","random","features","DefaultFeatures","map","feature","name","disabled","checked","DefaultVisuals","pitch_class","STOP_WORDS","styles","musicNoteIcon","fontSize","color","addIcon","marginLeft","marginRight","AddSongButton","dispatch","useDispatch","className","onClick","type","payload","modalType","style","removeSongButton","SongButton","song","currentSong","useSelector","state","songIdToDashboard","songList","merge","dashboardState","id","artists","album","currentSongId","data","activeDiscShadow","dashboardData","length","widgets","boxShadow","height","width","borderRadius","border","src","images","url","alt","Sidebar","AddWidget","alert","Switch","onText","offText","handleSwitch","Button","text","handleOnClick","DashboardButtons","mergedDashboard","console","log","Dashboard","artist_name","SpotifyAPI","storedToken","storedItems","get_token","a","fetch","method","headers","Authorization","btoa","client_id","body","json","access_token","search_music","user_input","token","input","split","forEach","word","push","join","tracks","items","get_artist","artist_id","get_audio_features","track_id","get_album_tracks","album_id","getToken","storeToken","store_token","getStoredToken","getAudioFeatures","searchMusic","storeSearchList","store_search_list","getSearchList","getArtist","getAlbumTracks","SearchBar","handleSearchChange","handleSearchSubmit","placeholder","aria-label","onChange","addTrackButton","TrackResult","track","trackSelectButton","showAddButton","removeTrackButton","SelectedTrack","trackRemoveButton","getSpotifyData","featureKey","featureToSpotifyKeyMap","song_title","album_title","album_cover","album_type","capitalizeFirstLetter","release_date","Date","toDateString","sadness","round","happiness","key","spotifyKey","explicit","tempo","acousticness","energy","speechiness","instrumentalness","liveness","danceability","loudness","duration","value","msToTime","s","secs","string","charAt","toUpperCase","slice","get_most_used_words","lyrics","stop_words","all_words","set_words","Set","bar","barArray","filter_word","toLowerCase","replace","includes","add","array","set","counter","set_word","sort","b","reverse","commonCollection","SongSelect","useState","searchInput","setSearchInput","searchResults","setSearchResults","selectedTracks","setSelectedTracks","songIds","addAudioFeatures","newSelectedTracks","spotifyToken","artist","assignedColor","artist_image","audio_features","addSelectedTracks","event","preventDefault","newSongCount","newSongs","showModal","newSearchResults","handleTrackRemove","selectedTrack","filter","updatedSearchResults","handleTrackSelect","target","unique","Checkbox","isChecked","isDisabled","substring","defaultChecked","htmlFor","VisualOptions","visuals","FeatureOptions","basic","details","audioFeatures","Bar","labels","datasets","label","backgroundColor","options","title","display","legend","responsive","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","gridLines","zeroLineColor","drawBorder","yAxes","ticks","beginAtZero","maxTicksLimit","fontColor","PlainText","numSongs","singleContent","feat","mergeContent","songData","flexDirection","margin","alignItems","justifyContent","flexWrap","Widget","widget","featuresSelected","visualsSelected","widgetTitle","numFeatures","defaultFeatures","defaultVisuals","WidgetSelect","dashboard","setFeaturesSelected","visualSelected","setVisualSelected","setFeatures","setVisuals","handleCheckboxOptions","checkedType","visualFeatures","chart","every","newVisualsState","newFeaturesState","newFeaturesSelected","addToSelectedFeatures","chartFeatures","removeFromSelectedFeatures","numWidgets","newWidget","newPayload","ErrorModal","Modal","modalRef","buttonRef","onSubmitSong","menuType","songMap","currentSingleSong","isSingle","onSubmitWidget","ReactDOM","createPortal","tag","role","tabIndex","aria-modal","ref","aria-labelledby","document","querySelector","classList","toggle","viewBox","d","App","modal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ADD_TO_SONG_LIST","REMOVE_FROM_SONG_LIST","songListReducer","action","initalState","ADD_TO_MAP","REMOVE_FROM_MAP","songIdToDashboardReducer","newState","OPEN_MODAL","CLOSE_MODAL","CHANGE_CURRENT_SONG","AUTO_FILL","CLEAR","currentSongReducer","tokenReducer","dashboardReducer","rootReducer","combineReducers","modalReducer","store","createStore","composeWithDevTools","render","getElementById"],"mappings":"6OAAaA,EACF,UADEA,EAGJ,UAHIA,EAIF,UAJEA,EAKN,SAEMC,EAAe,CAC5BA,MAAqB,CACnBC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,KAAM,UACNC,MAAO,UACPC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,IAAK,UACLC,OAAQ,UACRC,MAAO,UACPC,OAAQ,WAEV3C,OAAsB,WACpB,IAAI4C,EACAC,EAAQ,EACZ,IAAK,IAAIC,KAAQC,KAAKC,MAAWC,KAAKC,SAAW,IAAML,IAAOD,EAASE,GACvE,OAAOF,IAGIO,EAAW,CACtB,eACA,aACA,cACA,cACA,aACA,cACA,eACA,SACA,eACA,eACA,WACA,SACA,WACA,mBACA,MACA,WACA,WACA,aACA,cACA,QACA,eACA,YACA,WAGWC,EAAkBD,EAASE,KAAI,SAACC,GAC3C,MAAO,CAAEC,KAAMD,EAASE,UAAU,EAAOC,SAAS,MAGvCC,EAAiB,CAC5B,CACEH,KAAM,QACNJ,SAAUA,EACVK,UAAU,EACVC,SAAS,GAEX,CACEF,KAAM,MACNJ,SAAU,CACR,eACA,eACA,eACA,WACA,SACA,mBACA,WACA,WACA,aACA,cACA,QACA,YACA,WAEFK,UAAU,EACVC,SAAS,GAEX,CACEF,KAAM,QACNJ,SAAU,CACR,eACA,eACA,eACA,WACA,SACA,mBACA,WACA,WACA,aACA,cACA,QACA,YACA,WAEFK,UAAU,EACVC,SAAS,GAEX,CACEF,KAAM,MACNJ,SAAU,CACR,eACA,eACA,eACA,WACA,SACA,mBACA,WACA,WACA,aACA,cACA,QACA,YACA,WAEFK,UAAU,EACVC,SAAS,GAEX,CACEF,KAAM,WACNJ,SAAU,CACR,eACA,eACA,eACA,WACA,SACA,mBACA,WACA,WACA,aACA,cACA,QACA,YACA,WAEFK,UAAU,EACVC,SAAS,IAIAE,EAAc,CACzB,IACA,kBACA,IACA,kBACA,IACA,IACA,kBACA,IACA,mBACA,IACA,kBACA,KAESC,EACF,CACL,GACA,OACA,OACA,QACA,QACA,SACA,YACA,cACA,SACA,WACA,MACA,QACA,aACA,QACA,UACA,MACA,QACA,QACA,MACA,QACA,SACA,SACA,QACA,QACA,YACA,UACA,OACA,WACA,SACA,KACA,OACA,SACA,QACA,UACA,KACA,MACA,UACA,MACA,UACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,SACA,aACA,cACA,MACA,SACA,SACA,KACA,MACA,QACA,MACA,SACA,aACA,KACA,YACA,OACA,UACA,OACA,WACA,YACA,KACA,SACA,UACA,SACA,UACA,WACA,OACA,SACA,aACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,MACA,KACA,OACA,MACA,SACA,OACA,QACA,UACA,QACA,SACA,UACA,YACA,UACA,UACA,QACA,KACA,MACA,MACA,OACA,QACA,aACA,eACA,WACA,cACA,UACA,aACA,WACA,gBACA,QACA,WACA,SACA,MACA,YACA,OACA,UACA,aACA,YACA,UACA,MACA,SACA,YACA,WACA,KACA,OACA,UACA,QACA,OACA,QACA,OACA,YACA,SACA,OACA,MACA,KACA,QACA,SACA,SACA,OACA,YACA,MACA,SACA,SACA,WACA,aACA,KACA,MACA,OACA,OACA,WACA,QACA,YACA,WACA,aACA,aACA,KACA,UACA,UACA,SACA,SACA,MACA,UACA,MACA,QACA,QACA,QACA,OACA,WACA,YACA,UACA,MACA,UACA,SACA,WACA,QACA,UACA,QACA,OACA,OACA,UACA,cACA,MACA,OACA,UACA,QACA,QACA,KACA,OACA,QACA,OACA,MACA,SACA,YACA,MACA,SACA,OACA,UACA,SACA,MACA,SACA,OACA,UACA,SACA,KACA,OACA,QACA,QACA,OACA,QACA,MACA,OACA,YACA,SACA,SACA,SACA,WACA,OACA,UACA,OACA,KACA,MACA,UACA,MACA,SACA,YACA,MACA,UACA,UACA,UACA,MACA,KACA,KACA,UACA,OACA,MACA,YACA,KACA,WACA,MACA,OACA,SACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,OACA,SACA,KACA,QACA,KACA,OACA,QACA,MACA,OACA,SACA,OACA,OACA,IACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,SACA,QACA,SACA,WACA,QACA,OACA,OACA,MACA,QACA,OACA,QACA,SACA,WACA,SACA,OACA,UACA,QACA,MACA,QACA,MACA,OACA,SACA,OACA,QACA,OACA,MACA,QACA,SACA,KACA,OACA,WACA,YACA,SACA,QACA,WACA,OACA,QACA,OACA,OACA,WACA,OACA,SACA,KACA,MACA,OACA,OACA,UACA,KACA,SACA,OACA,SACA,KACA,OACA,SACA,YACA,OACA,UACA,QACA,UACA,QACA,SACA,YACA,eACA,MACA,OACA,OACA,SACA,KACA,SACA,MACA,OACA,cACA,QACA,SACA,MACA,WACA,MACA,UACA,kBACA,QACA,MACA,UACA,YACA,KACA,MACA,QACA,KACA,KACA,OACA,MACA,KACA,OACA,MACA,OACA,QACA,OACA,OACA,WACA,KACA,QACA,SACA,YACA,QACA,WACA,MACA,OACA,YACA,MACA,UACA,OACA,UACA,MACA,aACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,WACA,aACA,WACA,WACA,WACA,MACA,QACA,KACA,SACA,KACA,KACA,SACA,aACA,SACA,WACA,YACA,aACA,UACA,aACA,eACA,QACA,QACA,OACA,OACA,MACA,MACA,SACA,OACA,SACA,WACA,MACA,SACA,OACA,SACA,UACA,QACA,OACA,OACA,SACA,WACA,OACA,UACA,YACA,QACA,UACA,QACA,SACA,MACA,QACA,SACA,QACA,SACA,YACA,QACA,MACA,KACA,OACA,WACA,UACA,UACA,UACA,YACA,WACA,YACA,WACA,YACA,OACA,QACA,YACA,UACA,aACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,QACA,OACA,UACA,QACA,SACA,UACA,MACA,QACA,SACA,OACA,aACA,OACA,SACA,QACA,aACA,UACA,UACA,YACA,UACA,WACA,WACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,UACA,UACA,UACA,QACA,SACA,QACA,QACA,SACA,OACA,WACA,aACA,QACA,SACA,QACA,UACA,aACA,OACA,OACA,OACA,KACA,WACA,MACA,OACA,SACA,UACA,QACA,QACA,QACA,MACA,SACA,MACA,QACA,MACA,KACA,QACA,aACA,UACA,gBACA,SACA,SACA,WACA,QACA,OACA,KACA,OACA,UACA,KACA,MACA,OACA,SACA,OACA,QACA,UACA,IACA,QACA,UACA,SACA,OACA,MACA,MACA,KACA,OACA,QACA,MACA,SACA,MACA,KACA,OACA,UACA,OACA,QACA,OACA,OACA,QACA,UACA,QACA,OACA,WACA,UACA,SACA,UACA,OACA,SACA,WACA,QACA,aACA,UACA,UACA,UACA,UACA,YACA,WACA,UACA,QACA,YACA,QACA,SACA,UACA,MACA,QACA,UACA,QACA,SACA,OACA,WACA,QACA,QACA,MACA,OACA,UACA,OACA,OACA,SACA,UACA,SACA,QACA,QACA,WACA,MACA,MACA,MACA,QACA,SACA,OACA,SACA,QACA,WACA,aACA,SACA,OACA,IACA,QACA,IACA,SACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,OACA,IACA,IACA,IACA,IACA,IACA,MACA,WACA,SACA,OACA,SACA,OACA,WACA,MACA,UACA,MACA,KACA,WACA,SACA,MACA,SACA,QACA,UACA,OACA,OACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,sBACA,sBACA,WACA,qBACA,OACA,OACA,qBACA,OACA,MACA,OACA,OACA,UACA,QACA,SACA,MACA,QACA,OACA,MACA,SACA,SACA,OACA,aACA,MACA,QACA,UACA,WACA,YACA,UACA,KACA,WACA,UACA,aACA,gBACA,OACA,QACA,QACA,OACA,YACA,aACA,SACA,OACA,UACA,KACA,OACA,KACA,SACA,QACA,KACA,MACA,OACA,SACA,MACA,QACA,MACA,MACA,OACA,KACA,KACA,cACA,aACA,YACA,QACA,cACA,YACA,MACA,OACA,KACA,KACA,UACA,OACA,OACA,MACA,QACA,KACA,UACA,KACA,MACA,KACA,MACA,cACA,MACA,QACA,SACA,WACA,UACA,MACA,QACA,OACA,QACA,SACA,WACA,cACA,KACA,gBACA,UACA,aACA,YACA,WACA,QACA,UACA,MACA,UACA,MACA,OACA,UACA,WACA,WACA,YACA,UACA,MACA,MACA,UACA,OACA,OACA,SACA,QACA,SACA,QACA,cACA,gBACA,UACA,YACA,WACA,WACA,eACA,QACA,SACA,OACA,WACA,gBACA,eACA,eACA,UACA,SACA,UACA,UACA,UACA,QACA,SACA,OACA,UACA,WACA,SACA,MACA,MACA,KACA,MACA,WACA,aACA,MACA,MACA,OACA,MACA,QACA,SACA,OACA,OACA,OACA,SACA,QACA,QACA,OACA,SCnhCEC,EAAS,CACbC,cAAe,CACbC,SAAU,MACVC,MAAOjE,GAETkE,QAAS,CACPF,SAAU,MACVG,WAAY,OACZC,YAAa,MACbH,MAAOjE,IA6CIqE,EAvBO,WACpB,IAAMC,EAAWC,cASjB,OACE,8BACE,sBACEC,UAAU,kBAEVC,QAbY,WAChBH,EAAS,CACPI,KAAM,aACNC,QAAS,CACPC,UAAW,WAMb,UAKE,cAAC,IAA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","file":"static/js/main.b4980253.chunk.js","sourcesContent":["export const Colors = {\n  PRIMARY: \"#FBFAF5\",\n  SECONDARY: \"#eeeeee\",\n  BLACK: \"#232B2B\",\n  SPOTIFY: \"#1DB954\",\n  RED: \"EB5757\",\n};\nexport const StaticColors = {};\nStaticColors.names = {\n  aqua: \"#00ffff\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  black: \"#000000\",\n  blue: \"#0000ff\",\n  brown: \"#a52a2a\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgrey: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkviolet: \"#9400d3\",\n  fuchsia: \"#ff00ff\",\n  gold: \"#ffd700\",\n  green: \"#008000\",\n  indigo: \"#4b0082\",\n  khaki: \"#f0e68c\",\n  lightblue: \"#add8e6\",\n  lightcyan: \"#e0ffff\",\n  lightgreen: \"#90ee90\",\n  lightgrey: \"#d3d3d3\",\n  lightpink: \"#ffb6c1\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  navy: \"#000080\",\n  olive: \"#808000\",\n  orange: \"#ffa500\",\n  pink: \"#ffc0cb\",\n  purple: \"#800080\",\n  violet: \"#800080\",\n  red: \"#ff0000\",\n  silver: \"#c0c0c0\",\n  white: \"#ffffff\",\n  yellow: \"#ffff00\",\n};\nStaticColors.random = function () {\n  var result;\n  var count = 0;\n  for (var prop in this.names) if (Math.random() < 1 / ++count) result = prop;\n  return result;\n};\n\nexport const features = [\n  \"acousticness\",\n  \"song_title\",\n  \"album_title\",\n  \"album_cover\",\n  \"album_type\",\n  \"artist_name\",\n  \"artist_image\",\n  \"lyrics\",\n  \"danceability\",\n  \"track_number\",\n  \"duration\",\n  \"energy\",\n  \"explicit\",\n  \"instrumentalness\",\n  \"key\",\n  \"liveness\",\n  \"loudness\",\n  \"popularity\",\n  \"speechiness\",\n  \"tempo\",\n  \"release_date\",\n  \"happiness\",\n  \"sadness\",\n];\n\nexport const DefaultFeatures = features.map((feature) => {\n  return { name: feature, disabled: false, checked: false };\n});\n\nexport const DefaultVisuals = [\n  {\n    name: \"plain\",\n    features: features,\n    disabled: false,\n    checked: false,\n  },\n  {\n    name: \"bar\",\n    features: [\n      \"acousticness\",\n      \"danceability\",\n      \"track_number\",\n      \"duration\",\n      \"energy\",\n      \"instrumentalness\",\n      \"liveness\",\n      \"loudness\",\n      \"popularity\",\n      \"speechiness\",\n      \"tempo\",\n      \"happiness\",\n      \"sadness\",\n    ],\n    disabled: false,\n    checked: false,\n  },\n  {\n    name: \"radar\",\n    features: [\n      \"acousticness\",\n      \"danceability\",\n      \"track_number\",\n      \"duration\",\n      \"energy\",\n      \"instrumentalness\",\n      \"liveness\",\n      \"loudness\",\n      \"popularity\",\n      \"speechiness\",\n      \"tempo\",\n      \"happiness\",\n      \"sadness\",\n    ],\n    disabled: false,\n    checked: false,\n  },\n  {\n    name: \"pie\",\n    features: [\n      \"acousticness\",\n      \"danceability\",\n      \"track_number\",\n      \"duration\",\n      \"energy\",\n      \"instrumentalness\",\n      \"liveness\",\n      \"loudness\",\n      \"popularity\",\n      \"speechiness\",\n      \"tempo\",\n      \"happiness\",\n      \"sadness\",\n    ],\n    disabled: false,\n    checked: false,\n  },\n  {\n    name: \"doughnut\",\n    features: [\n      \"acousticness\",\n      \"danceability\",\n      \"track_number\",\n      \"duration\",\n      \"energy\",\n      \"instrumentalness\",\n      \"liveness\",\n      \"loudness\",\n      \"popularity\",\n      \"speechiness\",\n      \"tempo\",\n      \"happiness\",\n      \"sadness\",\n    ],\n    disabled: false,\n    checked: false,\n  },\n];\n\nexport const pitch_class = [\n  \"C\",\n  \"C♯/D♭\",\n  \"D\",\n  \"D♯/E♭\",\n  \"E\",\n  \"F\",\n  \"F♯/G♭\",\n  \"G\",\n  \"G♯/ A♭\",\n  \"A\",\n  \"A♯/B♭\",\n  \"B\",\n];\nexport let STOP_WORDS = {\n  words: [\n    \"\",\n    \"yeah\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"abroad\",\n    \"according\",\n    \"accordingly\",\n    \"across\",\n    \"actually\",\n    \"adj\",\n    \"after\",\n    \"afterwards\",\n    \"again\",\n    \"against\",\n    \"ago\",\n    \"ahead\",\n    \"ain\\u0027t\",\n    \"all\",\n    \"allow\",\n    \"allows\",\n    \"almost\",\n    \"alone\",\n    \"along\",\n    \"alongside\",\n    \"already\",\n    \"also\",\n    \"although\",\n    \"always\",\n    \"am\",\n    \"amid\",\n    \"amidst\",\n    \"among\",\n    \"amongst\",\n    \"an\",\n    \"and\",\n    \"another\",\n    \"any\",\n    \"anybody\",\n    \"anyhow\",\n    \"anyone\",\n    \"anything\",\n    \"anyway\",\n    \"anyways\",\n    \"anywhere\",\n    \"apart\",\n    \"appear\",\n    \"appreciate\",\n    \"appropriate\",\n    \"are\",\n    \"aren\\u0027t\",\n    \"around\",\n    \"as\",\n    \"a\\u0027s\",\n    \"aside\",\n    \"ask\",\n    \"asking\",\n    \"associated\",\n    \"at\",\n    \"available\",\n    \"away\",\n    \"awfully\",\n    \"back\",\n    \"backward\",\n    \"backwards\",\n    \"be\",\n    \"became\",\n    \"because\",\n    \"become\",\n    \"becomes\",\n    \"becoming\",\n    \"been\",\n    \"before\",\n    \"beforehand\",\n    \"begin\",\n    \"behind\",\n    \"being\",\n    \"believe\",\n    \"below\",\n    \"beside\",\n    \"besides\",\n    \"best\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"both\",\n    \"brief\",\n    \"but\",\n    \"by\",\n    \"came\",\n    \"can\",\n    \"cannot\",\n    \"cant\",\n    \"can\\u0027t\",\n    \"caption\",\n    \"cause\",\n    \"causes\",\n    \"certain\",\n    \"certainly\",\n    \"changes\",\n    \"clearly\",\n    \"c\\u0027mon\",\n    \"co\",\n    \"co.\",\n    \"com\",\n    \"come\",\n    \"comes\",\n    \"concerning\",\n    \"consequently\",\n    \"consider\",\n    \"considering\",\n    \"contain\",\n    \"containing\",\n    \"contains\",\n    \"corresponding\",\n    \"could\",\n    \"couldn\\u0027t\",\n    \"course\",\n    \"c\\u0027s\",\n    \"currently\",\n    \"dare\",\n    \"daren\\u0027t\",\n    \"definitely\",\n    \"described\",\n    \"despite\",\n    \"did\",\n    \"didn\\u0027t\",\n    \"different\",\n    \"directly\",\n    \"do\",\n    \"does\",\n    \"doesn\\u0027t\",\n    \"doing\",\n    \"done\",\n    \"don\\u0027t\",\n    \"down\",\n    \"downwards\",\n    \"during\",\n    \"each\",\n    \"edu\",\n    \"eg\",\n    \"eight\",\n    \"eighty\",\n    \"either\",\n    \"else\",\n    \"elsewhere\",\n    \"end\",\n    \"ending\",\n    \"enough\",\n    \"entirely\",\n    \"especially\",\n    \"et\",\n    \"etc\",\n    \"even\",\n    \"ever\",\n    \"evermore\",\n    \"every\",\n    \"everybody\",\n    \"everyone\",\n    \"everything\",\n    \"everywhere\",\n    \"ex\",\n    \"exactly\",\n    \"example\",\n    \"except\",\n    \"fairly\",\n    \"far\",\n    \"farther\",\n    \"few\",\n    \"fewer\",\n    \"fifth\",\n    \"first\",\n    \"five\",\n    \"followed\",\n    \"following\",\n    \"follows\",\n    \"for\",\n    \"forever\",\n    \"former\",\n    \"formerly\",\n    \"forth\",\n    \"forward\",\n    \"found\",\n    \"four\",\n    \"from\",\n    \"further\",\n    \"furthermore\",\n    \"get\",\n    \"gets\",\n    \"getting\",\n    \"given\",\n    \"gives\",\n    \"go\",\n    \"goes\",\n    \"going\",\n    \"gone\",\n    \"got\",\n    \"gotten\",\n    \"greetings\",\n    \"had\",\n    \"hadn\\u0027t\",\n    \"half\",\n    \"happens\",\n    \"hardly\",\n    \"has\",\n    \"hasn\\u0027t\",\n    \"have\",\n    \"haven\\u0027t\",\n    \"having\",\n    \"he\",\n    \"he\\u0027d\",\n    \"he\\u0027ll\",\n    \"hello\",\n    \"help\",\n    \"hence\",\n    \"her\",\n    \"here\",\n    \"hereafter\",\n    \"hereby\",\n    \"herein\",\n    \"here\\u0027s\",\n    \"hereupon\",\n    \"hers\",\n    \"herself\",\n    \"he\\u0027s\",\n    \"hi\",\n    \"him\",\n    \"himself\",\n    \"his\",\n    \"hither\",\n    \"hopefully\",\n    \"how\",\n    \"howbeit\",\n    \"however\",\n    \"hundred\",\n    \"i\\u0027d\",\n    \"ie\",\n    \"if\",\n    \"ignored\",\n    \"i\\u0027ll\",\n    \"i\\u0027m\",\n    \"immediate\",\n    \"in\",\n    \"inasmuch\",\n    \"inc\",\n    \"inc.\",\n    \"indeed\",\n    \"indicate\",\n    \"indicated\",\n    \"indicates\",\n    \"inner\",\n    \"inside\",\n    \"insofar\",\n    \"instead\",\n    \"into\",\n    \"inward\",\n    \"is\",\n    \"isn\\u0027t\",\n    \"it\",\n    \"it\\u0027d\",\n    \"it\\u0027ll\",\n    \"its\",\n    \"it\\u0027s\",\n    \"itself\",\n    \"i\\u0027ve\",\n    \"just\",\n    \"k\",\n    \"keep\",\n    \"keeps\",\n    \"kept\",\n    \"know\",\n    \"known\",\n    \"knows\",\n    \"last\",\n    \"lately\",\n    \"later\",\n    \"latter\",\n    \"latterly\",\n    \"least\",\n    \"less\",\n    \"lest\",\n    \"let\",\n    \"let\\u0027s\",\n    \"like\",\n    \"liked\",\n    \"likely\",\n    \"likewise\",\n    \"little\",\n    \"look\",\n    \"looking\",\n    \"looks\",\n    \"low\",\n    \"lower\",\n    \"ltd\",\n    \"made\",\n    \"mainly\",\n    \"make\",\n    \"makes\",\n    \"many\",\n    \"may\",\n    \"maybe\",\n    \"mayn\\u0027t\",\n    \"me\",\n    \"mean\",\n    \"meantime\",\n    \"meanwhile\",\n    \"merely\",\n    \"might\",\n    \"mightn\\u0027t\",\n    \"mine\",\n    \"minus\",\n    \"miss\",\n    \"more\",\n    \"moreover\",\n    \"most\",\n    \"mostly\",\n    \"mr\",\n    \"mrs\",\n    \"much\",\n    \"must\",\n    \"mustn\\u0027t\",\n    \"my\",\n    \"myself\",\n    \"name\",\n    \"namely\",\n    \"nd\",\n    \"near\",\n    \"nearly\",\n    \"necessary\",\n    \"need\",\n    \"needn\\u0027t\",\n    \"needs\",\n    \"neither\",\n    \"never\",\n    \"neverf\",\n    \"neverless\",\n    \"nevertheless\",\n    \"new\",\n    \"next\",\n    \"nine\",\n    \"ninety\",\n    \"no\",\n    \"nobody\",\n    \"non\",\n    \"none\",\n    \"nonetheless\",\n    \"noone\",\n    \"no-one\",\n    \"nor\",\n    \"normally\",\n    \"not\",\n    \"nothing\",\n    \"notwithstanding\",\n    \"novel\",\n    \"now\",\n    \"nowhere\",\n    \"obviously\",\n    \"of\",\n    \"off\",\n    \"often\",\n    \"oh\",\n    \"ok\",\n    \"okay\",\n    \"old\",\n    \"on\",\n    \"once\",\n    \"one\",\n    \"ones\",\n    \"one\\u0027s\",\n    \"only\",\n    \"onto\",\n    \"opposite\",\n    \"or\",\n    \"other\",\n    \"others\",\n    \"otherwise\",\n    \"ought\",\n    \"oughtn\\u0027t\",\n    \"our\",\n    \"ours\",\n    \"ourselves\",\n    \"out\",\n    \"outside\",\n    \"over\",\n    \"overall\",\n    \"own\",\n    \"particular\",\n    \"particularly\",\n    \"past\",\n    \"per\",\n    \"perhaps\",\n    \"placed\",\n    \"please\",\n    \"plus\",\n    \"possible\",\n    \"presumably\",\n    \"probably\",\n    \"provided\",\n    \"provides\",\n    \"que\",\n    \"quite\",\n    \"qv\",\n    \"rather\",\n    \"rd\",\n    \"re\",\n    \"really\",\n    \"reasonably\",\n    \"recent\",\n    \"recently\",\n    \"regarding\",\n    \"regardless\",\n    \"regards\",\n    \"relatively\",\n    \"respectively\",\n    \"right\",\n    \"round\",\n    \"said\",\n    \"same\",\n    \"saw\",\n    \"say\",\n    \"saying\",\n    \"says\",\n    \"second\",\n    \"secondly\",\n    \"see\",\n    \"seeing\",\n    \"seem\",\n    \"seemed\",\n    \"seeming\",\n    \"seems\",\n    \"seen\",\n    \"self\",\n    \"selves\",\n    \"sensible\",\n    \"sent\",\n    \"serious\",\n    \"seriously\",\n    \"seven\",\n    \"several\",\n    \"shall\",\n    \"shan\\u0027t\",\n    \"she\",\n    \"she\\u0027d\",\n    \"she\\u0027ll\",\n    \"she\\u0027s\",\n    \"should\",\n    \"shouldn\\u0027t\",\n    \"since\",\n    \"six\",\n    \"so\",\n    \"some\",\n    \"somebody\",\n    \"someday\",\n    \"somehow\",\n    \"someone\",\n    \"something\",\n    \"sometime\",\n    \"sometimes\",\n    \"somewhat\",\n    \"somewhere\",\n    \"soon\",\n    \"sorry\",\n    \"specified\",\n    \"specify\",\n    \"specifying\",\n    \"still\",\n    \"sub\",\n    \"such\",\n    \"sup\",\n    \"sure\",\n    \"take\",\n    \"taken\",\n    \"taking\",\n    \"tell\",\n    \"tends\",\n    \"th\",\n    \"than\",\n    \"thank\",\n    \"thanks\",\n    \"thanx\",\n    \"that\",\n    \"that\\u0027ll\",\n    \"thats\",\n    \"that\\u0027s\",\n    \"that\\u0027ve\",\n    \"the\",\n    \"their\",\n    \"theirs\",\n    \"them\",\n    \"themselves\",\n    \"then\",\n    \"thence\",\n    \"there\",\n    \"thereafter\",\n    \"thereby\",\n    \"there\\u0027d\",\n    \"therefore\",\n    \"therein\",\n    \"there\\u0027ll\",\n    \"there\\u0027re\",\n    \"theres\",\n    \"there\\u0027s\",\n    \"thereupon\",\n    \"there\\u0027ve\",\n    \"these\",\n    \"they\",\n    \"they\\u0027d\",\n    \"they\\u0027ll\",\n    \"they\\u0027re\",\n    \"they\\u0027ve\",\n    \"thing\",\n    \"things\",\n    \"think\",\n    \"third\",\n    \"thirty\",\n    \"this\",\n    \"thorough\",\n    \"thoroughly\",\n    \"those\",\n    \"though\",\n    \"three\",\n    \"through\",\n    \"throughout\",\n    \"thru\",\n    \"thus\",\n    \"till\",\n    \"to\",\n    \"together\",\n    \"too\",\n    \"took\",\n    \"toward\",\n    \"towards\",\n    \"tried\",\n    \"tries\",\n    \"truly\",\n    \"try\",\n    \"trying\",\n    \"t\\u0027s\",\n    \"twice\",\n    \"two\",\n    \"un\",\n    \"under\",\n    \"underneath\",\n    \"undoing\",\n    \"unfortunately\",\n    \"unless\",\n    \"unlike\",\n    \"unlikely\",\n    \"until\",\n    \"unto\",\n    \"up\",\n    \"upon\",\n    \"upwards\",\n    \"us\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"uses\",\n    \"using\",\n    \"usually\",\n    \"v\",\n    \"value\",\n    \"various\",\n    \"versus\",\n    \"very\",\n    \"via\",\n    \"viz\",\n    \"vs\",\n    \"want\",\n    \"wants\",\n    \"was\",\n    \"wasn\\u0027t\",\n    \"way\",\n    \"we\",\n    \"we\\u0027d\",\n    \"welcome\",\n    \"well\",\n    \"we\\u0027ll\",\n    \"went\",\n    \"were\",\n    \"we\\u0027re\",\n    \"weren\\u0027t\",\n    \"we\\u0027ve\",\n    \"what\",\n    \"whatever\",\n    \"what\\u0027ll\",\n    \"what\\u0027s\",\n    \"what\\u0027ve\",\n    \"when\",\n    \"whence\",\n    \"whenever\",\n    \"where\",\n    \"whereafter\",\n    \"whereas\",\n    \"whereby\",\n    \"wherein\",\n    \"where\\u0027s\",\n    \"whereupon\",\n    \"wherever\",\n    \"whether\",\n    \"which\",\n    \"whichever\",\n    \"while\",\n    \"whilst\",\n    \"whither\",\n    \"who\",\n    \"who\\u0027d\",\n    \"whoever\",\n    \"whole\",\n    \"who\\u0027ll\",\n    \"whom\",\n    \"whomever\",\n    \"who\\u0027s\",\n    \"whose\",\n    \"why\",\n    \"will\",\n    \"willing\",\n    \"wish\",\n    \"with\",\n    \"within\",\n    \"without\",\n    \"wonder\",\n    \"won\\u0027t\",\n    \"would\",\n    \"wouldn\\u0027t\",\n    \"yes\",\n    \"yet\",\n    \"you\",\n    \"you\\u0027d\",\n    \"you\\u0027ll\",\n    \"your\",\n    \"you\\u0027re\",\n    \"yours\",\n    \"yourself\",\n    \"yourselves\",\n    \"you\\u0027ve\",\n    \"zero\",\n    \"a\",\n    \"how\\u0027s\",\n    \"i\",\n    \"when\\u0027s\",\n    \"why\\u0027s\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"j\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"uucp\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"I\",\n    \"www\",\n    \"amoungst\",\n    \"amount\",\n    \"bill\",\n    \"bottom\",\n    \"call\",\n    \"computer\",\n    \"con\",\n    \"couldnt\",\n    \"cry\",\n    \"de\",\n    \"describe\",\n    \"detail\",\n    \"due\",\n    \"eleven\",\n    \"empty\",\n    \"fifteen\",\n    \"fify\",\n    \"fill\",\n    \"find\",\n    \"fire\",\n    \"forty\",\n    \"front\",\n    \"full\",\n    \"give\",\n    \"hasnt\",\n    \"herseâ€\",\n    \"himseâ€\",\n    \"interest\",\n    \"itseâ€\",\n    \"mill\",\n    \"move\",\n    \"myseâ€\",\n    \"part\",\n    \"put\",\n    \"show\",\n    \"side\",\n    \"sincere\",\n    \"sixty\",\n    \"system\",\n    \"ten\",\n    \"thick\",\n    \"thin\",\n    \"top\",\n    \"twelve\",\n    \"twenty\",\n    \"abst\",\n    \"accordance\",\n    \"act\",\n    \"added\",\n    \"adopted\",\n    \"affected\",\n    \"affecting\",\n    \"affects\",\n    \"ah\",\n    \"announce\",\n    \"anymore\",\n    \"apparently\",\n    \"approximately\",\n    \"aren\",\n    \"arent\",\n    \"arise\",\n    \"auth\",\n    \"beginning\",\n    \"beginnings\",\n    \"begins\",\n    \"biol\",\n    \"briefly\",\n    \"ca\",\n    \"date\",\n    \"ed\",\n    \"effect\",\n    \"et-al\",\n    \"ff\",\n    \"fix\",\n    \"gave\",\n    \"giving\",\n    \"hed\",\n    \"heres\",\n    \"hes\",\n    \"hid\",\n    \"home\",\n    \"id\",\n    \"im\",\n    \"immediately\",\n    \"importance\",\n    \"important\",\n    \"index\",\n    \"information\",\n    \"invention\",\n    \"itd\",\n    \"keys\",\n    \"kg\",\n    \"km\",\n    \"largely\",\n    \"lets\",\n    \"line\",\n    \"\\u0027ll\",\n    \"means\",\n    \"mg\",\n    \"million\",\n    \"ml\",\n    \"mug\",\n    \"na\",\n    \"nay\",\n    \"necessarily\",\n    \"nos\",\n    \"noted\",\n    \"obtain\",\n    \"obtained\",\n    \"omitted\",\n    \"ord\",\n    \"owing\",\n    \"page\",\n    \"pages\",\n    \"poorly\",\n    \"possibly\",\n    \"potentially\",\n    \"pp\",\n    \"predominantly\",\n    \"present\",\n    \"previously\",\n    \"primarily\",\n    \"promptly\",\n    \"proud\",\n    \"quickly\",\n    \"ran\",\n    \"readily\",\n    \"ref\",\n    \"refs\",\n    \"related\",\n    \"research\",\n    \"resulted\",\n    \"resulting\",\n    \"results\",\n    \"run\",\n    \"sec\",\n    \"section\",\n    \"shed\",\n    \"shes\",\n    \"showed\",\n    \"shown\",\n    \"showns\",\n    \"shows\",\n    \"significant\",\n    \"significantly\",\n    \"similar\",\n    \"similarly\",\n    \"slightly\",\n    \"somethan\",\n    \"specifically\",\n    \"state\",\n    \"states\",\n    \"stop\",\n    \"strongly\",\n    \"substantially\",\n    \"successfully\",\n    \"sufficiently\",\n    \"suggest\",\n    \"thered\",\n    \"thereof\",\n    \"therere\",\n    \"thereto\",\n    \"theyd\",\n    \"theyre\",\n    \"thou\",\n    \"thoughh\",\n    \"thousand\",\n    \"throug\",\n    \"til\",\n    \"tip\",\n    \"ts\",\n    \"ups\",\n    \"usefully\",\n    \"usefulness\",\n    \"\\u0027ve\",\n    \"vol\",\n    \"vols\",\n    \"wed\",\n    \"whats\",\n    \"wheres\",\n    \"whim\",\n    \"whod\",\n    \"whos\",\n    \"widely\",\n    \"words\",\n    \"world\",\n    \"youd\",\n    \"youre\",\n  ],\n};\n","import React from \"react\";\nimport \"./AddSongButton.css\";\nimport MusicNoteSharpIcon from \"@material-ui/icons/MusicNoteSharp\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Colors } from \"../../constants\";\nimport { useDispatch } from \"react-redux\";\nconst styles = {\n  musicNoteIcon: {\n    fontSize: \"8vh\",\n    color: Colors.BLACK,\n  },\n  addIcon: {\n    fontSize: \"3vh\",\n    marginLeft: \"-3vh\",\n    marginRight: \"1vh\",\n    color: Colors.BLACK,\n  },\n};\n// export default class AddSongButton extends Component {\n//   handleSelectMenu = () => {\n//     this.props.selectMenu(\"song\");\n//   };\n//   render() {\n//     return (\n//       <div>\n//         <div\n//           className=\"add-song-button\"\n//           // ref={buttonRef}\n//           onClick={this.handleSelectMenu}\n//         >\n//           <MusicNoteSharpIcon style={styles.musicNoteIcon} />\n//           <AddIcon style={styles.addIcon} />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\nconst AddSongButton = () => {\n  const dispatch = useDispatch();\n  const openModal = () => {\n    dispatch({\n      type: \"OPEN_MODAL\",\n      payload: {\n        modalType: \"song\",\n      },\n    });\n  };\n  return (\n    <div>\n      <div\n        className=\"add-song-button\"\n        // ref={buttonRef}\n        onClick={openModal}\n      >\n        <MusicNoteSharpIcon style={styles.musicNoteIcon} />\n        <AddIcon style={styles.addIcon} />\n      </div>\n    </div>\n  );\n};\nexport default AddSongButton;\n","import React, { Component, useEffect, useState } from \"react\";\nimport \"./SongButton.css\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"../../constants\";\nconst styles = {\n  removeSongButton: {\n    color: \"#eb5757\",\n    fontSize: \"3vh\",\n  },\n};\n// export default class SongButton extends Component {\n//   handleRemoveSong = () => {\n//     this.props.removeSong(this.props.song.id);\n//   };\n//   handleOnClickSong = () => {\n//     this.props.onClickSong(this.props.song.id);\n//   };\n//   render() {\n//     const { name, artists } = this.props.song;\n//     return (\n//       <div className=\"song-button\">\n//         <div className=\"remove-song-button\">\n//           <HighlightOffIcon\n//             type=\"submit\"\n//             onClick={this.handleRemoveSong}\n//             style={styles.removeSongButton}\n//           />\n//         </div>\n//         <div className=\"song-button-disc\" onClick={this.handleOnClickSong}>\n//           <p>\n//             <b>{name}</b>\n//             <br />\n//             {artists[0].name}\n//           </p>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\nconst SongButton = ({ song }) => {\n  const currentSong = useSelector((state) => state.currentSong);\n  const songIdToDashboard = useSelector((state) => state.songIdToDashboard);\n  const songList = useSelector((state) => state.songList);\n  const { merge } = useSelector((state) => state.dashboardState);\n  const dispatch = useDispatch();\n  const { id, name, artists, color, album } = song;\n  const currentSongId = currentSong.data.id;\n  const removeSong = () => {\n    dispatch({\n      type: \"REMOVE_FROM_SONG_LIST\",\n      payload: { id: song.id },\n    });\n    dispatch({\n      type: \"REMOVE_FROM_MAP\",\n      payload: { id: song.id },\n    });\n    if (!merge) {\n      // Don't change when merged\n      dispatch({\n        type: \"CHANGE_CURRENT_SONG\",\n        payload: {\n          dashboardData: songIdToDashboard[\n            songList[songList.length - 1].id\n          ] || {\n            data: {},\n            widgets: [],\n          },\n        },\n      });\n    }\n  };\n  const onClickSong = () => {\n    if (!merge) {\n      // Don't change when merged\n      dispatch({\n        type: \"CHANGE_CURRENT_SONG\",\n        payload: { dashboardData: songIdToDashboard[id] },\n      });\n    }\n  };\n  const activeDiscShadow =\n    merge || currentSongId === id ? `0px 0px 15px 0 ${color}` : \"none\";\n  // Add box shadow if we're at the merge state so we can know the color assignments or\n  // for when we're on the current song dashboard/click on the song\n  return (\n    <div className=\"song-button\">\n      <div className=\"remove-song-button\">\n        <HighlightOffIcon\n          type=\"submit\"\n          onClick={removeSong}\n          style={styles.removeSongButton}\n        />\n      </div>\n      <div\n        className=\"song-button-disc\"\n        onClick={onClickSong}\n        style={{ boxShadow: activeDiscShadow }}\n      >\n        <img\n          style={{\n            height: \"3vw\",\n            width: \"3vw\",\n            borderRadius: \"50%\",\n            border: `2px solid #000000`,\n          }}\n          src={`${album.images[0].url}`}\n          alt={`${name}`}\n        ></img>\n        {/* <p>\n          <b>{name}</b>\n          <br />\n          {artists[0].name}\n        </p> */}\n      </div>\n    </div>\n  );\n};\nexport default SongButton;\n","import React, { useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport AddSongButton from \"./AddSongButton/AddSongButton\";\nimport SongButton from \"./SongButton/SongButton\";\nimport { useSelector } from \"react-redux\";\nconst Sidebar = () => {\n  const songList = useSelector((state) => state.songList);\n  return (\n    <aside>\n      <header>\n        <h1>Songlyzer</h1>\n      </header>\n      <div className=\"song-list\">\n        {songList.length > 0\n          ? songList.map((song) => {\n              return <SongButton key={song.id} song={song}></SongButton>;\n            })\n          : null}\n        <AddSongButton></AddSongButton>\n      </div>\n    </aside>\n  );\n};\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Colors } from \"../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst styles = {\n  addIcon: {\n    fontSize: \"10vh\",\n    color: Colors.PRIMARY,\n  },\n};\nconst AddWidget = () => {\n  const dispatch = useDispatch();\n  const songList = useSelector((state) => state.songList);\n  const openModal = () => {\n    if (songList.length < 1) {\n      alert(\"No songs selected\");\n    } else {\n      dispatch({\n        type: \"OPEN_MODAL\",\n        payload: {\n          modalType: \"widget\",\n        },\n      });\n    }\n  };\n\n  return (\n    <div className=\"add-widget-button\" onClick={openModal}>\n      <AddIcon style={styles.addIcon} />\n    </div>\n  );\n};\nexport default AddWidget;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst Switch = ({ onText, offText, handleSwitch }) => {\n  return (\n    <label className=\"switch\">\n      <input onClick={handleSwitch} type=\"checkbox\" id=\"togBtn\" />\n      <div className=\"slider round\">\n        <span className=\"on\">\n          <b>{onText}</b>\n        </span>\n        <span className=\"off\">\n          <b>{offText}</b>\n        </span>\n      </div>\n    </label>\n  );\n};\nconst Button = ({ text, className, handleOnClick }) => {\n  return (\n    <label className=\"button\">\n      <input onClick={handleOnClick} type=\"checkbox\" />\n      <div className={`container round ${className}`}>\n        <span className=\"text \">\n          <b>{text}</b>\n        </span>\n      </div>\n    </label>\n  );\n};\nconst DashboardButtons = () => {\n  // TODO: AUTO_FILL AND CLEAR FOR WHEN IT'S MERGED\n  const dispatch = useDispatch();\n  const currentSong = useSelector((state) => state.currentSong);\n  const { mergedDashboard } = useSelector((state) => state.songIdToDashboard);\n  const handleMergeToggle = () => {\n    console.log(\"Merging Data...\");\n    dispatch({\n      type: \"TOGGLE_MERGE\",\n    });\n    dispatch({\n      type: \"CHANGE_CURRENT_SONG\",\n      payload: { id: \"mergedDashboard\", dashboardData: mergedDashboard },\n    });\n  };\n  const handleAutofill = () => {\n    console.log(\"Auto filling widgets..\");\n    if (currentSong.widgets.length < 1) return;\n    dispatch({\n      type: \"AUTO_FILL\",\n    });\n  };\n  const handleClear = () => {\n    console.log(\"Clearing widgets...\");\n    if (currentSong.widgets.length < 1) return;\n    dispatch({\n      type: \"ADD_TO_MAP\",\n      payload: {\n        id: currentSong.id,\n        dashboardData: {\n          data: currentSong.data,\n          widgets: [],\n        },\n      },\n    });\n    dispatch({\n      type: \"CLEAR\",\n    });\n  };\n  return (\n    <div className=\"buttons-container\">\n      <Switch\n        onText={\"Merge\"}\n        handleSwitch={handleMergeToggle}\n        offText={\"Single\"}\n      />\n      <Button\n        text={\"Autofill\"}\n        handleOnClick={handleAutofill}\n        className={\"autofill-button\"}\n      />\n      <Button\n        text={\"Clear\"}\n        handleOnClick={handleClear}\n        className={\"clear-button\"}\n      />\n    </div>\n  );\n};\nexport default DashboardButtons;\n","import React, { Component } from \"react\";\nimport AddWidget from \"./AddWidget/AddWidget\";\nimport { useSelector } from \"react-redux\";\nimport \"./Dashboard.css\";\nimport DashboardButtons from \"./DashboardButtons/DashboardButtons\";\n\n// export default class Dashboard extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       dashboard_state: \"single\",\n//       song_list: this.props.song_list || [],\n//       song_map: this.props.song_map || {},\n//       song_info: this.props.song_info,\n//       widgets: this.props.widgets || [],\n//     };\n//   }\n//   render() {\n//     // const widgets = this.props.song_;\n//     // handleDashboardState;\n\n//     const {\n//       song_info: { name },\n//       selectMenu,\n//     } = this.props;\n//     console.log(`Rendering '${name}' Dashboard...`);\n//     console.log(this.props.song_info);\n\n//     return (\n//       <main>\n//         {name}\n//         Dashboard\n//         <DasboardButtons></DasboardButtons>\n//         <div className=\"widgets-container\">\n//           <AddWidget selectMenu={selectMenu}></AddWidget>\n//         </div>\n//       </main>\n//     );\n//   }\n// }\nconst Dashboard = () => {\n  const { merge } = useSelector((state) => state.dashboardState);\n  const currentSong = useSelector((state) => state.currentSong);\n  const { data, widgets } = currentSong;\n  const name = data.name;\n  const color = data.color;\n  const artist_name = data.artists ? data.artists[0].name : \"\";\n\n  return (\n    <main>\n      <DashboardButtons />\n      {merge ? null : (\n        <p style={{ fontSize: \"20px\", color: color }}>\n          <b>{name}</b> {artist_name}\n        </p>\n      )}\n      <div className=\"widgets-container\">\n        {widgets.length > 0 ? widgets : null}\n        <AddWidget></AddWidget>\n      </div>\n    </main>\n  );\n};\nexport default Dashboard;\n","import { CLIENT_ID, CLIENT_SECRET } from \"./keys\";\nconst SpotifyAPI = (function () {\n  const client_id = CLIENT_ID;\n  const client_secret = CLIENT_SECRET;\n  let storedToken = \"\";\n  let storedItems = [];\n  const get_token = async () => {\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: \"Basic \" + btoa(client_id + \":\" + client_secret),\n      },\n      body: \"grant_type=client_credentials\",\n    });\n    const data = await result.json();\n    return data.access_token;\n  };\n  const search_music = async (user_input, token) => {\n    if (user_input === \"\" || user_input === \" \") return [];\n    const limit = 15;\n    const type = \"track\";\n    // Fix endpoint\n    let input = [];\n    user_input.split(\"\").forEach((word) => {\n      if (word === \" \") word = \"%20\";\n      input.push(word);\n    });\n    // Get results from search\n    const result = await fetch(\n      `https://api.spotify.com/v1/search?q=${input.join(\n        \"\"\n      )}&type=${type}&limit=${limit}`,\n      {\n        method: \"GET\",\n        headers: { Authorization: \"Bearer \" + token },\n      }\n    );\n    const data = await result.json();\n    return data.tracks.items;\n  };\n  const get_artist = async (artist_id, token) => {\n    const result = await fetch(\n      `https://api.spotify.com/v1/artists/${artist_id}`,\n      {\n        method: \"GET\",\n        headers: { Authorization: \"Bearer \" + token },\n      }\n    );\n    const data = await result.json();\n    return data;\n  };\n  const get_audio_features = async (track_id, token) => {\n    const result = await fetch(\n      `https://api.spotify.com/v1/audio-features/${track_id}`,\n      {\n        method: \"GET\",\n        headers: { Authorization: \"Bearer \" + token },\n      }\n    );\n    const data = await result.json();\n    return data;\n  };\n  const get_album_tracks = async (album_id, token) => {\n    const limit = 50;\n    const result = await fetch(\n      `\thttps://api.spotify.com/v1/albums/${album_id}/tracks?limit=${limit}`,\n      {\n        method: \"GET\",\n        headers: { Authorization: \"Bearer \" + token },\n      }\n    );\n    const data = await result.json();\n    return data;\n  };\n  const store_token = (token) => (storedToken = token);\n  const get_stored_token = () => {\n    return storedToken;\n  };\n  const store_search_list = (items) => (storedItems = items);\n  const get_search_list = () => {\n    return storedItems;\n  };\n\n  return {\n    getToken() {\n      return get_token();\n    },\n\n    storeToken(token) {\n      store_token(token);\n    },\n    getStoredToken() {\n      return get_stored_token();\n    },\n    getAudioFeatures(track_id, token) {\n      return get_audio_features(track_id, token);\n    },\n    searchMusic(user_input, token) {\n      return search_music(user_input, token);\n    },\n    storeSearchList(items) {\n      store_search_list(items);\n    },\n    getSearchList(items) {\n      return get_search_list(items);\n    },\n    getArtist(artist_id, token) {\n      return get_artist(artist_id, token);\n    },\n    getAlbumTracks(album_id, token) {\n      return get_album_tracks(album_id, token);\n    },\n  };\n})();\n\nexport default SpotifyAPI;\n","const SearchBar = ({ handleSearchChange, handleSearchSubmit }) => {\n  return (\n    <div className=\"search-bar\">\n      <input\n        id=\"search-music\"\n        name=\"search-input\"\n        className=\"form-control form-control-dark w-100\"\n        type=\"text\"\n        placeholder=\"Search Song\"\n        aria-label=\"Search\"\n        onChange={handleSearchChange}\n      />\n      <button\n        className=\"search-button\"\n        type=\"submit\"\n        onClick={handleSearchSubmit}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\nexport default SearchBar;\n","import AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport { Colors } from \"../../../constants\";\nimport \"./TrackResult.css\";\nconst addTrackButton = {\n  fontSize: \"3vh\",\n  color: Colors.SPOTIFY,\n};\n\nconst TrackResult = ({ track, trackSelectButton, showAddButton }) => {\n  return (\n    <li className=\"search-result\">\n      {track.name}\n      <b>{track.artists[0].name}</b>\n      {showAddButton ? (\n        <AddCircleIcon\n          className=\"add-track-button\"\n          style={addTrackButton}\n          // bind the components trackSelectButton method\n          // and use the bind syntax that prepends\n          // arguments to attach the item argument\n          onClick={() => trackSelectButton(track)}\n        />\n      ) : null}\n    </li>\n  );\n};\nexport default TrackResult;\n","import RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { Colors } from \"../../../constants\";\n\nconst removeTrackButton = {\n  fontSize: \"3vh\",\n  color: Colors.RED,\n};\n\nconst SelectedTrack = ({ track, trackRemoveButton }) => {\n  return (\n    <li className=\"selected-track\">\n      {track.name}\n      <b>{track.artists[0].name}</b>\n      <RemoveCircleIcon\n        className=\"remove-track-button\"\n        style={removeTrackButton}\n        onClick={() => trackRemoveButton(track)}\n      />\n    </li>\n  );\n};\nexport default SelectedTrack;\n","import { STOP_WORDS, pitch_class } from \"./constants\";\nexport const getSpotifyData = (data, featureKey) => {\n  const featureToSpotifyKeyMap = {\n    // Only contains those features that aren't matched to spotify keys e.g track_number is named the same\n    // as a key in the Spotify. E.g song_title is matched with the key 'name' meaning the song name in Spotify Data\n    song_title: data[\"name\"],\n    album_title: data[\"album\"].name,\n    album_cover: data[\"album\"].images[0].url,\n    album_type: capitalizeFirstLetter(data[\"album\"].album_type),\n    artist_name: data[\"artists\"][0].name,\n    release_date: new Date(data[\"album\"].release_date).toDateString(),\n    sadness: Math.round((1.0 - data[\"valence\"]) * 100),\n    happiness: Math.round(data[\"valence\"] * 100),\n    key: `${spotifyKey(\"key\", data[\"key\"])} ${spotifyKey(\n      \"mode\",\n      data[\"mode\"]\n    )}`,\n    explicit: spotifyKey(\"explicit\", data[\"explicit\"]),\n    tempo: Math.round(data[\"tempo\"]),\n    acousticness: Math.round(data[\"acousticness\"] * 100),\n    energy: Math.round(data[\"energy\"] * 100),\n    speechiness: Math.round(data[\"speechiness\"] * 100),\n    instrumentalness: Math.round(data[\"instrumentalness\"] * 100),\n    liveness: Math.round(data[\"liveness\"] * 100),\n    danceability: Math.round(data[\"danceability\"] * 100),\n    loudness: Math.round(data[\"loudness\"]),\n    duration: data[\"duration_ms\"],\n  };\n  return featureKey in featureToSpotifyKeyMap\n    ? featureToSpotifyKeyMap[featureKey]\n    : data[featureKey];\n};\n\nexport const spotifyKey = (key, value) => {\n  switch (key) {\n    case \"explicit\":\n      return value ? \"Yes\" : \"No\";\n    case \"feature\":\n      return value === \"tempo\" || value === \"loudness\" ? 1 : 100;\n    case \"mode\":\n      return value ? \"Major\" : \"Minor\";\n    default:\n      return pitch_class[value];\n  }\n};\n// Other (StackOverflow) Functions\nexport const msToTime = (s) => {\n  // convert to 0:00 format\n  var ms = s % 1000;\n  s = (s - ms) / 1000;\n  var secs = s % 60;\n  s = (s - secs) / 60;\n  var mins = s % 60;\n  if (secs < 10) secs = \"0\" + secs;\n  return mins + \":\" + secs;\n};\nexport const capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nexport function getRandomColor() {\n  var r = Math.floor(Math.random() * 256); // Random between 0-255\n  var g = Math.floor(Math.random() * 256); // Random between 0-255\n  var b = Math.floor(Math.random() * 256); // Random between 0-255\n  var rgb = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  return rgb;\n}\nexport const getRandomDarkColor = () => {\n  const h = Math.floor(Math.random() * 360),\n    s = Math.floor(Math.random() * 100) + \"%\",\n    l = Math.floor(Math.random() * 60) + \"%\"; // max value of l is 100, but I set to 60 cause I want to generate dark colors\n  // (use for background with white/light font color)\n  return `hsl(${h},${s},${l})`;\n};\nexport const getRandomLightColor = () => {\n  const color = \"hsl(\" + Math.random() * 360 + \", 100%, 75%)\";\n  return color;\n};\nexport const LyricsAnalysis = (function () {\n  const get_most_used_words = (lyrics) => {\n    // From : https://countwordsfree.com/stopwords/english/json\n    const stop_words = STOP_WORDS[\"words\"];\n    let all_words = [];\n    let set_words = new Set();\n    for (let bar of lyrics.split(\"\\n\")) {\n      if (bar[0] === \"[\") continue; // For details Ex. [Chorus: Bob]\n      let barArray = bar.split(\" \");\n      for (let word of barArray) {\n        const filter_word = word.toLowerCase().replace(/[^A-Za-z0-9_'-]/g, \"\");\n        if (!stop_words.includes(filter_word)) {\n          all_words.push(filter_word);\n          set_words.add(filter_word);\n        }\n      }\n    }\n    const common_words = commonCollection(all_words, set_words);\n    return common_words;\n  };\n  return {\n    getMostUsedWords(lyrics) {\n      return get_most_used_words(lyrics);\n    },\n  };\n})();\nfunction commonCollection(array, set) {\n  let counter = [];\n  for (let set_word of set) {\n    var count = 0;\n    for (let word of array) {\n      if (word === set_word) count++;\n    }\n    counter.push({ word: set_word, count: count });\n  }\n  const sorted_collection = counter\n    .sort(function (a, b) {\n      return a.count - b.count;\n    })\n    .reverse();\n  // const filtered_collection = sorted_collection.filter((obj)=> {\n  //     if(obj.count > 1) return obj;\n  // })\n  const top_ten = sorted_collection.slice(0, 10);\n  return top_ten;\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SpotifyAPI from \"../../APIs/spotifyAPI\";\nimport SearchBar from \"./SearchBar/SearchBar\";\nimport TrackResult from \"./TrackResult/TrackResult\";\nimport SelectedTrack from \"./SelectedTrack/SelectedTrack\";\nimport { getRandomColor, getRandomDarkColor } from \"../../helpers\";\nimport Lyrics from \"song-lyrics-api\";\nimport { StaticColors } from \"../../constants\";\nconst SongSelect = () => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const songList = useSelector((state) => state.songList);\n  const { merge } = useSelector((state) => state.dashboardState);\n  // const spotifyToken = useSelector((state) => state.token);\n  const songIds = songList.map((song) => song.id);\n  const dispatch = useDispatch();\n  const addAudioFeatures = async () => {\n    let newSelectedTracks = [];\n\n    for await (let track of selectedTracks) {\n      //Grab artist image\n      const spotifyToken = await SpotifyAPI.getToken();\n      const artist = await SpotifyAPI.getArtist(\n        track[\"artists\"][0].id,\n        await spotifyToken\n      );\n      // console.log(artist);\n      //Assign a color to the song\n      const assignedColor = StaticColors.random(); //TODO: Different for dark mode and light mode\n\n      const artist_image = await artist[\"images\"][0].url;\n      // console.log(artist_image);\n      //Adding Audio Features data\n      const audio_features = await SpotifyAPI.getAudioFeatures(\n        track.id,\n        await spotifyToken\n      );\n      // console.log(audio_features);\n      // const newLyrics = new Lyrics();\n      // const lyrics = await newLyrics.getLyrics(\n      //   `${track.name} ${track[\"artists\"][0].name}`\n      // );\n      // console.log(lyrics);\n      await newSelectedTracks.push({\n        ...track,\n        ...audio_features,\n        artist_image: artist_image,\n        color: assignedColor,\n        // lyrics: lyrics,\n      });\n    }\n    return await newSelectedTracks;\n  };\n  const addSelectedTracks = async (event) => {\n    event.preventDefault();\n    const newSelectedTracks = await addAudioFeatures();\n    let newSongCount = 0;\n    for (let track of newSelectedTracks) {\n      // Add track to songIdToDashBoardReducer\n      const payload = {\n        dashboardData: {\n          data: track,\n          widgets: [],\n        },\n        id: track.id,\n      };\n      if (newSongCount === 0 && !merge) {\n        // Don't change when merged\n        dispatch({\n          type: \"CHANGE_CURRENT_SONG\",\n          payload: { dashboardData: payload.dashboardData },\n        });\n      }\n      dispatch({\n        type: \"ADD_TO_MAP\",\n        payload: payload,\n      });\n      newSongCount += 1;\n    }\n    dispatch({\n      // Update in songListReducer\n      type: \"ADD_TO_SONG_LIST\",\n      payload: { newSongs: [...newSelectedTracks] },\n    });\n    dispatch({\n      type: \"CLOSE_MODAL\",\n      payload: {\n        showModal: false,\n      },\n    });\n  };\n  const handleSearchSubmit = async (event) => {\n    event.preventDefault();\n    const spotifyToken = await SpotifyAPI.getToken();\n    const newSearchResults = await SpotifyAPI.searchMusic(\n      searchInput,\n      await spotifyToken\n    );\n    setSearchResults(newSearchResults);\n  };\n  const handleSearchChange = (event) => {\n    setSearchInput(event.target.value);\n  };\n  const handleTrackRemove = (selectedTrack) => {\n    const newSelectedTracks = selectedTracks.filter(\n      (track) => track.id !== selectedTrack.id\n    );\n    setSelectedTracks(newSelectedTracks);\n    const updatedSearchResults = searchResults;\n    updatedSearchResults.push(selectedTrack);\n    setSearchResults(updatedSearchResults);\n  };\n  const handleTrackSelect = (selectedTrack) => {\n    const newSelectedTracks = selectedTracks;\n    newSelectedTracks.push(selectedTrack);\n    const updatedSearchResults = searchResults.filter(\n      (track) => track.id !== selectedTrack.id\n    );\n    setSearchResults(updatedSearchResults);\n    setSelectedTracks(newSelectedTracks);\n  };\n  return (\n    <div>\n      <form>\n        <SearchBar\n          handleSearchChange={handleSearchChange}\n          handleSearchSubmit={handleSearchSubmit}\n        />\n        <ul>\n          {selectedTracks.map((track) => {\n            return (\n              <SelectedTrack\n                key={track.id}\n                track={track}\n                trackRemoveButton={handleTrackRemove}\n              />\n            );\n          })}\n        </ul>\n        <ul>\n          {searchResults.map((track) => {\n            const unique = !songIds.includes(track.id);\n            return (\n              <TrackResult\n                key={track.id}\n                track={track}\n                trackSelectButton={handleTrackSelect}\n                showAddButton={unique}\n              />\n            );\n          })}\n        </ul>\n        <button\n          type=\"submit\"\n          id=\"add-selected-tracks\"\n          className=\"add-selected-tracks\"\n          onClick={addSelectedTracks}\n        >\n          Add Songs\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default SongSelect;\n// export default class SongSelect extends Component {\n//   constructor(props) {\n//     console.log(\"Rendering Song Select Menu...\");\n//     super(props);\n//     this.state = {\n//       search_input: \"\",\n//       search_results: [],\n//       search_results_map: {},\n//       selected_tracks: [],\n//     };\n\n//     this.selected_tracks_map = this.props.song_map;\n//   }\n\n//   handleSearchSubmit = async (event) => {\n//     event.preventDefault();\n//     console.log(\"Searching Song...\");\n//     const token = await SpotifyAPI.getToken();\n//     SpotifyAPI.storeToken(token);\n//     const new_search_results = await SpotifyAPI.searchMusic(\n//       this.state.search_input,\n//       token\n//     );\n//     // let new_search_results = [];\n//     // for await (let track of search_results) {\n//     //   const audio_features = await SpotifyAPI.getAudioFeatures(track.id, token);\n//     //   await new_search_results.push({ ...track, ...audio_features });\n//     // }\n//     // TODO: LOADING SEARCH SCREEN\n//     let new_search_results_map = {};\n//     new_search_results.map(\n//       (track) => (new_search_results_map[track.id] = track)\n//     );\n//     this.setState({\n//       search_results: new_search_results,\n//       search_results_map: new_search_results_map,\n//     });\n//   };\n\n//   handleSearchChange = (event) => {\n//     this.setState({ search_input: event.target.value });\n//   };\n//   handleTrackSelect = (selected_track) => {\n//     this.setState({\n//       selected_tracks: this.addToSelectedTracks(selected_track),\n//       search_results: this.removeFromSearchResults(selected_track),\n//       search_results_map: this.removeFromSearchResultsMap(selected_track),\n//     });\n//     this.selected_tracks_map = this.addToSelectedTracksMap(selected_track);\n//   };\n//   handleTrackRemove = (selected_track) => {\n//     this.setState({\n//       selected_tracks: this.removeFromSelectedTracks(selected_track),\n//       search_results: this.addToSearchResults(selected_track),\n//       search_results_map: this.addToSearchResultsMap(selected_track),\n//     });\n\n//     this.selected_tracks_map = this.removeFromSelectedTracksMap(selected_track);\n//   };\n\n//   addToSelectedTracks = (selected_track) => {\n//     let new_selected_tracks = this.state.selected_tracks;\n//     new_selected_tracks.push(selected_track);\n//     return new_selected_tracks;\n//   };\n//   removeFromSelectedTracks = (selected_track) => {\n//     const selected_id = selected_track.id;\n//     let new_selected_tracks = this.state.selected_tracks.filter(\n//       (track) => track.id !== selected_id\n//     );\n//     return new_selected_tracks;\n//   };\n\n//   addToSelectedTracksMap = (selected_track) => {\n//     const selected_id = selected_track.id;\n//     let new_selected_tracks_map = this.selected_tracks_map;\n//     new_selected_tracks_map[selected_id] = selected_track;\n//     return new_selected_tracks_map;\n//   };\n\n//   removeFromSelectedTracksMap = (selected_track) => {\n//     const selected_id = selected_track.id;\n//     let new_selected_tracks_map = this.selected_tracks_map;\n//     if (new_selected_tracks_map) delete new_selected_tracks_map[selected_id];\n//     return new_selected_tracks_map;\n//   };\n\n//   addToSearchResults = (selected_track) => {\n//     let new_search_results = this.state.search_results;\n//     new_search_results.push(selected_track);\n//     return new_search_results;\n//   };\n\n//   removeFromSearchResults = (selected_track) => {\n//     const selected_id = selected_track.id;\n//     let new_search_results = this.state.search_results.filter(\n//       (track) => track.id !== selected_id\n//     );\n//     return new_search_results;\n//   };\n\n//   addToSearchResultsMap = (selected_track) => {\n//     const selected_id = selected_track.id;\n//     let new_search_results_map = this.state.search_results_map;\n//     new_search_results_map[selected_id] = selected_track;\n//     return new_search_results_map;\n//   };\n\n//   removeFromSearchResultsMap = (selected_track) => {\n//     const selected_id = selected_track.id;\n//     let new_search_results_map = this.state.search_results_map;\n//     if (new_search_results_map) delete new_search_results_map[selected_id];\n//     return new_search_results_map;\n//   };\n\n//   render() {\n//     const { search_results, selected_tracks } = this.state;\n//     const selected_tracks_map = this.selected_tracks_map;\n//     return (\n//       <div>\n//         <form>\n//           <SearchBar\n//             handleSearchChange={this.handleSearchChange}\n//             handleSearchSubmit={this.handleSearchSubmit}\n//           />\n//           <ul>\n//             {selected_tracks.map((track) => {\n//               return (\n//                 <SelectedTrack\n//                   key={track.id}\n//                   track={track}\n//                   trackRemoveButton={this.handleTrackRemove}\n//                 />\n//               );\n//             })}\n//           </ul>\n//           <ul>\n//             {search_results.map((track) => {\n//               const unique = !(track.id in selected_tracks_map);\n//               return (\n//                 <TrackResult\n//                   key={track.id}\n//                   track={track}\n//                   trackSelectButton={this.handleTrackSelect}\n//                   showAddButton={unique}\n//                 />\n//               );\n//             })}\n//           </ul>\n//           <button\n//             type=\"submit\"\n//             id=\"add-selected-tracks\"\n//             className=\"add-selected-tracks\"\n//             onClick={this.props.onSubmit.bind(this, selected_tracks)}\n//           >\n//             Add Song\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n","const Checkbox = ({ feature, checked, isChecked, isDisabled }) => {\n  let text = feature\n    .split(\"_\")\n    .map((word) => {\n      return word[0].toUpperCase() + word.substring(1);\n    })\n    .join(\" \");\n  // console.log(isDisabled);\n  return (\n    <>\n      <input\n        onClick={isChecked}\n        type=\"checkbox\"\n        id={feature}\n        value={feature}\n        disabled={isDisabled}\n        defaultChecked={checked}\n      />\n      <label htmlFor={feature}>{text}</label>\n    </>\n  );\n};\nexport default Checkbox;\n","import Checkbox from \"../Checkbox/Checkbox\";\nconst VisualOptions = ({ visuals, isChecked }) => {\n  return (\n    <div>\n      <p>\n        <b>Widget Options</b>\n      </p>\n      <ul>\n        {visuals.map(({ name, disabled, checked }) => (\n          <Checkbox\n            key={name}\n            feature={name}\n            isDisabled={disabled}\n            isChecked={isChecked}\n            checked={checked}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default VisualOptions;\n","import Checkbox from \"../Checkbox/Checkbox\";\n\nconst FeatureOptions = ({ features, isChecked }) => {\n  // disable options when features get chose\n  // Ex. can't have certain features together if you want a certain graph\n  // or if you choose something like 'title' and the 'energy' feature\n  // you can only use the chart 'Plain Text'\n  // title, album, album_type (single/album), album release_date, artist,danceability, duration_ms, energy, explicit (yes/no),\n  //key, liveness, loudness, popularity, speechiness, tempo, track_number, valence\n  // console.log(features);\n  const basic = [\n    \"song_title\",\n    \"album_title\",\n    \"artist_name\",\n    \"album_cover\",\n    \"artist_image\",\n  ];\n  const details = [\n    \"album_type\",\n    \"track_number\",\n    \"release_date\",\n    \"key\",\n    \"duration\",\n    \"explicit\",\n    \"lyrics\",\n  ];\n  const audioFeatures = [\n    \"acousticness\",\n    \"danceability\",\n    \"energy\",\n    \"happiness\",\n    \"liveness\",\n    \"loudness\",\n    \"popularity\",\n    \"sadness\",\n    \"speechiness\",\n    \"tempo\",\n  ];\n  return (\n    <div>\n      Feature Options\n      <p>\n        <b>Basic</b>\n      </p>\n      <ul>\n        {features.map(({ name, disabled, checked }) =>\n          basic.includes(name) ? (\n            <Checkbox\n              key={name}\n              feature={name}\n              isDisabled={disabled}\n              isChecked={isChecked}\n              checked={checked}\n            />\n          ) : null\n        )}\n      </ul>\n      <p>\n        <b>Details</b>\n      </p>\n      <ul>\n        {features.map(({ name, disabled, checked }) =>\n          details.includes(name) ? (\n            <Checkbox\n              key={name}\n              feature={name}\n              isDisabled={disabled}\n              isChecked={isChecked}\n              checked={checked}\n            />\n          ) : null\n        )}\n      </ul>\n      <p>\n        <b>Audio Features</b>\n      </p>\n      <ul>\n        {features.map(({ name, disabled, checked }) =>\n          audioFeatures.includes(name) ? (\n            <Checkbox\n              key={name}\n              feature={name}\n              isDisabled={disabled}\n              isChecked={isChecked}\n              checked={checked}\n            />\n          ) : null\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default FeatureOptions;\n","import React from \"react\";\nimport { Bar as BarChart } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport { Colors } from \"../../constants\";\nimport { capitalizeFirstLetter, getSpotifyData } from \"../../helpers\";\n\nconst Bar = ({ features }) => {\n  //TODO: ONly one feature at a time\n  const { merge } = useSelector((state) => state.dashboardState);\n  const songList = useSelector((state) => state.songList);\n  const { data } = useSelector((state) => state.currentSong);\n  console.log(\"Creating Bar...\");\n\n  const state = merge\n    ? {\n        labels: songList.map((song) => song.name),\n        datasets: [\n          {\n            label: capitalizeFirstLetter(features[0]),\n            backgroundColor: songList.map((song) => song.color),\n            data: songList.map((song) => getSpotifyData(song, features[0])),\n          },\n        ],\n      }\n    : {\n        labels: features.length > 1 ? features.map((feature) => feature) : [\"\"],\n        datasets: [\n          {\n            label: capitalizeFirstLetter(features[0]),\n            backgroundColor: data.color,\n            data:\n              features.length > 1\n                ? features.map((feature) => data[feature])\n                : [data[features[0]]],\n          },\n        ],\n      };\n  const options = {\n    title: {\n      display: true,\n      fontSize: 20,\n      // text:\n      //   features.length > 1\n      //     ? \"Song Features\"\n      //     : capitalizeFirstLetter(features[0]),\n      color: Colors.BLACK,\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    },\n\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            zeroLineColor: Colors.BLACK,\n            drawBorder: false,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 2,\n            fontColor: Colors.BLACK,\n          },\n          gridLines: {\n            zeroLineColor: Colors.BLACK,\n            drawBorder: false,\n          },\n        },\n      ],\n    },\n  };\n  return <BarChart data={state} options={options} />;\n};\nexport default Bar;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { capitalizeFirstLetter, getSpotifyData, msToTime } from \"../../helpers\";\nconst PlainText = ({ features }) => {\n  const { data } = useSelector((state) => state.currentSong);\n  const songList = useSelector((state) => state.songList);\n  const { merge } = useSelector((state) => state.dashboardState);\n  const numSongs = songList.length;\n  const singleContent = features.map((feat) => {\n    let text = \"\";\n    let featureTitle = feat\n      .split(\"_\")\n      .map((word) => capitalizeFirstLetter(word))\n      .join(\" \");\n\n    text = getSpotifyData(data, feat);\n    if (feat === \"duration\") {\n      text = msToTime(text);\n    }\n\n    return feat === \"artist_image\" || feat === \"album_cover\" ? (\n      <div key={feat}>\n        <img\n          src={`${text}`}\n          alt={`${data.name} Pic`}\n          style={{\n            height: \"100px\",\n            width: \"100px\",\n            border: `3px solid ${data.color}`,\n            borderRadius: \"25%\",\n          }}\n        />\n      </div>\n    ) : (\n      <div key={feat}>\n        {/* <p>{featureTitle}</p> */}\n        <p style={{ color: data.color }}>\n          <b>{text}</b>\n        </p>\n      </div>\n    );\n  });\n\n  const mergeContent = (\n    <div style={{ display: \"flex\" }}>\n      {/* Go through each song aligned with all features */}\n      {songList.map((songData) => {\n        return (\n          <div\n            style={{ display: \"flex\", flexDirection: \"column\", margin: \"5px\" }}\n          >\n            {features.map((feat) => {\n              let text = \"\";\n              let featureTitle = feat\n                .split(\"_\")\n                .map((word) => capitalizeFirstLetter(word))\n                .join(\" \");\n\n              text = getSpotifyData(songData, feat);\n              if (feat === \"duration\") {\n                text = msToTime(text);\n              }\n\n              return feat === \"artist_image\" || feat === \"album_cover\" ? (\n                <div key={`${songData.name}-${feat}`}>\n                  <img\n                    src={`${text}`}\n                    alt={`${songData.name} Pic`}\n                    style={{\n                      height: \"100px\",\n                      width: \"100px\",\n                      border: `3px solid ${songData.color}`,\n                      borderRadius: \"25%\",\n                    }}\n                  />\n                </div>\n              ) : (\n                <div key={`${songData.name}-${feat}`}>\n                  {/* <p>{featureTitle}</p> */}\n                  <p style={{ color: songData.color }}>\n                    <b>{text}</b>\n                  </p>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n      }}\n    >\n      {merge && numSongs > 1 ? mergeContent : singleContent}\n      {/* <p>\n        <b>{featureTitle}</b>\n      </p>\n      <p>{text}</p> */}\n    </div>\n  );\n};\nexport default PlainText;\n","import React from \"react\";\nimport Bar from \"../../Charts/Bar/Bar\";\nimport PlainText from \"../../Charts/PlainText/PlainText\";\nimport { Colors } from \"../../constants\";\nimport { capitalizeFirstLetter } from \"../../helpers\";\nimport \"../Dashboard.css\";\nconst Widget = ({ featuresSelected, visualsSelected }) => {\n  let widget;\n  let widgetTitle = \"\";\n  const numFeatures = featuresSelected.length;\n  switch (visualsSelected) {\n    case \"bar\":\n      widget = <Bar features={featuresSelected} />;\n      widgetTitle =\n        numFeatures > 1\n          ? \"Audio Features\"\n          : capitalizeFirstLetter(featuresSelected[0]);\n      break;\n    // case \"radar\":\n    //   widget = <Radar features={featuresSelected} />;\n    //   break;\n    // case \"pie\":\n    //   widget = <Pie features={featuresSelected} />;\n    //   break;\n    // case \"doughnut\":\n    //   widget = <Doughnut features={featuresSelected} />;\n    //   break;\n    default:\n      widgetTitle =\n        numFeatures > 1\n          ? \"Details\"\n          : capitalizeFirstLetter(featuresSelected[0]);\n      widget = <PlainText features={featuresSelected} />;\n      break;\n  }\n  widgetTitle = widgetTitle\n    .split(\"_\")\n    .map((word) => capitalizeFirstLetter(word))\n    .join(\" \");\n  return (\n    <div className=\"widget\">\n      <h3 style={{ margin: 0, color: Colors.BLACK }}>{widgetTitle}</h3>\n      <hr style={{ width: \"100%\" }} />\n      {widget}\n    </div>\n  );\n};\nexport default Widget;\n","import React, { useEffect, useState } from \"react\";\nimport VisualOptions from \"./VisualOptions/VisualOptions\";\nimport FeatureOptions from \"./FeatureOptions/FeatureOptions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Widget from \"../../Dashboard/Widget/Widget\";\nimport { DefaultFeatures, DefaultVisuals, features } from \"../../constants\";\n\nconst defaultFeatures = [...DefaultFeatures];\nconst defaultVisuals = [...DefaultVisuals];\n// Test\nconst testSelectedAllFeatures = features;\nconst testPlainText = \"plain\";\nconst WidgetSelect = () => {\n  const currentSong = useSelector((state) => state.currentSong);\n  const songList = useSelector((state) => state.songList);\n  const dashboardState = useSelector((state) => state.dashboard);\n  const dispatch = useDispatch();\n  const [featuresSelected, setFeaturesSelected] = useState([]);\n  const [visualSelected, setVisualSelected] = useState(\"\");\n  const [features, setFeatures] = useState(defaultFeatures);\n  const [visuals, setVisuals] = useState(defaultVisuals);\n\n  const addToSelectedFeatures = (feature) => {\n    let newFeaturesSelected = featuresSelected;\n    newFeaturesSelected.push(feature);\n    return newFeaturesSelected;\n  };\n  const removeFromSelectedFeatures = (feature) => {\n    let newFeaturesSelected = featuresSelected.filter(\n      (feat) => feat !== feature\n    );\n    return newFeaturesSelected;\n  };\n  const handleCheckboxOptions = (event) => {\n    // Disable/enable checkboxes accordingly\n    // e.g Checking Song Title and Danceability means you're only allowed to click on Plain Text Widget\n    const checked = event.target.value;\n    const isChecked = event.target.checked;\n    const featureNames = features.map((feature) => feature.name);\n    const checkedType = featureNames.includes(checked) ? \"feature\" : \"visual\";\n    if (!isChecked) {\n      if (checkedType === \"visual\") {\n        // Reset Visual Charts State\n        setVisualSelected(\"\");\n        let newVisualsState = [];\n        for (let chart of visuals) {\n          chart.disabled = false;\n          newVisualsState.push(chart);\n        }\n        setVisuals(newVisualsState);\n\n        // Reset Features State\n        let newFeaturesState = [];\n        for (let feature of features) {\n          feature.disabled = false;\n          newFeaturesState.push(feature);\n        }\n        setFeatures(newFeaturesState);\n      } else {\n        const newFeaturesSelected = removeFromSelectedFeatures(checked);\n        setFeaturesSelected(newFeaturesSelected);\n        const newVisualsState = [];\n        for (let chart of visuals) {\n          chart.disabled = !newFeaturesSelected.every((\n            feature // Disables/enables the chart with new selected features\n          ) => chart.features.includes(feature));\n          newVisualsState.push(chart);\n        }\n        setVisuals(newVisualsState);\n      }\n    } else {\n      if (checkedType === \"visual\") {\n        // Checked is a visual chart\n\n        // Find what features we're able to use with visual chart\n        let visualFeatures = [];\n        for (let chart of visuals) {\n          if (chart.name === checked) {\n            visualFeatures = chart.features;\n          }\n        }\n\n        if (\n          !featuresSelected || //If features aren't selected\n          (!visualSelected &&\n            featuresSelected.every((feature) =>\n              visualFeatures.includes(feature)\n            )) // If visual chart selected corresponds with features\n        ) {\n          // Disable other Visual Charts\n          let newVisualsState = [];\n          for (let chart of visuals) {\n            if (chart.name !== checked) {\n              chart.disabled = true;\n            }\n            newVisualsState.push(chart);\n          }\n          setVisuals(newVisualsState);\n          setVisualSelected(checked);\n\n          let newFeaturesState = [];\n          for (let feature of features) {\n            feature.disabled = !visualFeatures.includes(feature.name); // Disables/enables the features depending on selected chart\n            newFeaturesState.push(feature);\n          }\n          setFeatures(newFeaturesState);\n        }\n      } else {\n        // Checked is a feature\n        let visualFeatures = [];\n        for (let chart of visuals) {\n          if (chart.name === visualSelected) {\n            visualFeatures = chart.features;\n          }\n        }\n        if (\n          !visualSelected || //If visual chart not selected\n          (visualSelected && visualFeatures.includes(checked)) //If feature selected okay with chart selected\n        ) {\n          const newFeaturesSelected = addToSelectedFeatures(checked);\n          setFeaturesSelected(newFeaturesSelected);\n\n          const newVisualsState = [];\n          for (let chart of visuals) {\n            const chartFeatures = chart.features;\n            chart.disabled = !newFeaturesSelected.every((\n              feature // Disables/enables the chart with new selected features\n            ) => chartFeatures.includes(feature));\n            newVisualsState.push(chart);\n          }\n          setVisuals(newVisualsState);\n        }\n      }\n    }\n  };\n\n  const handleSubmitWidget = (event) => {\n    event.preventDefault();\n    // console.log(featuresSelected, features, visualSelected, visuals);\n    if (!visualSelected) {\n      alert(\"Select a Chart\");\n    } else if (featuresSelected.length < 1) {\n      alert(\"Select a Feature\");\n    } else {\n      const numWidgets = currentSong.widgets.length; // Use count as component key\n      let newWidget = (\n        <Widget\n          key={`widget${numWidgets + 1}`}\n          featuresSelected={featuresSelected}\n          visualsSelected={visualSelected}\n        />\n      );\n      const newPayload = {\n        data: currentSong.data,\n        widgets: [...currentSong.widgets, newWidget],\n      };\n      dispatch({\n        type: \"CHANGE_CURRENT_SONG\",\n        payload: { dashboardData: newPayload },\n      });\n      dispatch({\n        type: \"ADD_TO_MAP\",\n        payload: {\n          id: currentSong.data.id,\n          dashboardData: newPayload,\n        },\n      });\n      dispatch({\n        type: \"CLOSE_MODAL\",\n      });\n    }\n    // console.log(DefaultFeatures);\n    // setFeatures(...DefaultFeatures);\n    // setVisuals(...DefaultVisuals);\n  };\n  //TODO: SET ERRORS AT\n  //  - When trying to add wedget with chart selected but no features selected\n  // - When trying to add widget with features selected but no chart selected\n  // - When there's no songs on the sidebar\n  return (\n    <form>\n      <FeatureOptions isChecked={handleCheckboxOptions} features={features} />\n      <VisualOptions isChecked={handleCheckboxOptions} visuals={visuals} />\n      <button type=\"submit\" onClick={handleSubmitWidget}>\n        Add Widget\n      </button>\n    </form>\n  );\n};\nexport default WidgetSelect;\n","import React from \"react\";\nconst ErrorModal = () => {\n  return (\n    <div>\n      <h1>ERROR</h1>\n    </div>\n  );\n};\nexport default ErrorModal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SongSelect from \"../SongSelectMenu/SongSelect\";\nimport WidgetSelect from \"../WidgetSelectMenu/WidgetSelect\";\nimport FocusTrap from \"focus-trap-react\";\nimport \"./Modal.css\";\nimport { useDispatch } from \"react-redux\";\nimport ErrorModal from \"../Error/ErrorModal\";\n\nexport const Modal = ({\n  modalType,\n  // onClickOutside,\n  modalRef,\n  buttonRef,\n  // closeModal,\n  onSubmitSong,\n  menuType,\n  songMap,\n  songList,\n  currentSingleSong,\n  isSingle,\n  onSubmitWidget,\n}) => {\n  const dispatch = useDispatch();\n  const toggleScrollLock = () => {\n    document.querySelector(\"html\").classList.toggle(\"scroll-lock\");\n  };\n  const closeModal = () => {\n    dispatch({\n      type: \"CLOSE_MODAL\",\n      payload: {\n        showModal: false,\n      },\n    });\n    toggleScrollLock();\n  };\n\n  // const onClickOutside = (event) => {\n  //   if (this.modal && this.modal.contains(event.target)) return;\n  //   closeModal();\n  // };\n  return ReactDOM.createPortal(\n    <FocusTrap>\n      <aside\n        tag=\"aside\"\n        role=\"dialog\"\n        tabIndex=\"-1\"\n        aria-modal=\"true\"\n        className=\"modal-cover\"\n        // onClick={onClickOutside}\n      >\n        <div className=\"modal-area\" ref={modalRef}>\n          <button\n            ref={buttonRef}\n            aria-label=\"Close Modal\"\n            aria-labelledby=\"close-modal\"\n            className=\"_modal-close\"\n            onClick={closeModal}\n          >\n            <span id=\"close-modal\" className=\"_hide-visual\">\n              Close\n            </span>\n            <svg className=\"_modal-close-icon\" viewBox=\"0 0 40 40\">\n              <path d=\"M 10,10 L 30,30 M 30,10 L 10,30\" />\n            </svg>\n          </button>\n          <div className=\"modal-body\">\n            {modalType === \"song\" ? (\n              <SongSelect />\n            ) : modalType === \"widget\" ? (\n              <WidgetSelect />\n            ) : (\n              <ErrorModal />\n            )}\n          </div>\n        </div>\n      </aside>\n    </FocusTrap>,\n    document.body\n  );\n};\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar/Sidebar\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport { Modal } from \"./SelectMenus/Modal/Modal\";\nimport SpotifyAPI from \"./APIs/spotifyAPI\";\n\nconst App = () => {\n  // const state = useSelector((state) => state);\n  // const isSingleState = useSelector();\n  const { showModal, modalType } = useSelector((state) => state.modal);\n  return (\n    <div className=\"main-container\">\n      <Sidebar />\n      {/* <Sidebar\n      // selectMenu={this.showModal}\n      // song_list={song_list}\n      // song_map={song_map}\n      // removeSong={this.handleRemoveSong}\n      // onClickSong={this.onChangeCurrentSong}\n      />\n      <Dashboard /> */}\n      <Dashboard />\n      {/* {single ? current_single_dashboard : merged_component} */}\n      {showModal ? <Modal modalType={modalType} /> : null}\n    </div>\n  );\n};\nexport default App;\n// import React, { Component } from \"react\";\n// import \"./App.css\";\n// import Sidebar from \"./Sidebar/Sidebar\";\n// import Dashboard from \"./Dashboard/Dashboard\";\n// import { Modal } from \"./SelectMenus/Modal/Modal\";\n// import SpotifyAPI from \"./APIs/spotifyAPI\";\n\n// export default class App extends Component {\n//   constructor(props) {\n//     console.log(\"Rendering App...\");\n//     super(props);\n//     this.state = {\n//       is_shown: false,\n//       song_list: [],\n//       song_map: {},\n//       menu_type: \"\",\n//       current_single_song: \"\",\n//       current_single_dashboard: (\n//         <Dashboard\n//           song_info={{ name: \"INIT_DASHBOARD\" }}\n//           selectMenu={this.showModal}\n//         />\n//       ),\n//       merged_dashboard: <Dashboard selectMenu={this.showModal} />,\n//       song_to_dashboard_map: {},\n//       single: true,\n//     };\n//   }\n\n//   onChangeCurrentSong = (song_id) => {\n//     const { song_to_dashboard_map } = this.state;\n//     const new_current_single_song = song_id;\n//     const new_current_single_dashboard = song_to_dashboard_map[song_id];\n//     this.setState({\n//       current_single_song: new_current_single_song,\n//       current_single_dashboard: new_current_single_dashboard,\n//     });\n//   };\n\n//   initializeDashboard = () => {\n//     this.setState({\n//       current_single_dashboard: (\n//         <Dashboard\n//           song_info={{ name: \"INIT_DASHBOARD\" }}\n//           selectMenu={this.showModal}\n//         />\n//       ),\n//       current_single_song: \"\",\n//     });\n//   };\n//   handleRemoveSong = (song_id) => {\n//     const {\n//       song_map,\n//       song_list,\n//       song_to_dashboard_map,\n//       current_single_song,\n//     } = this.state;\n//     console.log(`Removing ${song_map[song_id].name}...`);\n//     const new_song_list = song_list.filter((track) => track.id !== song_id);\n//     const new_song_map = song_map;\n//     delete new_song_map[song_id];\n//     const new_song_to_dashboard_map = song_to_dashboard_map;\n//     delete new_song_to_dashboard_map[song_id];\n//     if (song_id === current_single_song) {\n//       console.log(\"Removing current song...\");\n//       if (new_song_list.length === 0) this.initializeDashboard();\n//       else this.onChangeCurrentSong(new_song_list[new_song_list.length - 1].id);\n//     }\n//     this.setState({\n//       song_list: new_song_list,\n//       song_map: new_song_map,\n//       song_to_dashboard_map: new_song_to_dashboard_map,\n//     });\n//   };\n\n//   handleAddSong = async (selected_tracks, event) => {\n//     event.preventDefault();\n//     const { song_map, song_list, song_to_dashboard_map } = this.state;\n//     let tracks = [];\n\n//     const token = await SpotifyAPI.getToken();\n//     SpotifyAPI.storeToken(token);\n//     for await (let track of selected_tracks) {\n//       const audio_features = await SpotifyAPI.getAudioFeatures(track.id, token);\n//       await tracks.push({ ...track, ...audio_features });\n//     }\n\n//     let new_song_map = song_map;\n//     tracks.forEach((track) => {\n//       console.log(`Adding ${track.name}...`);\n//       new_song_map[track.id] = track;\n//     });\n//     let new_song_list = song_list.concat(tracks);\n//     let new_song_to_dashboard_map = song_to_dashboard_map;\n//     for (let track of tracks) {\n//       new_song_to_dashboard_map[track.id] = (\n//         <Dashboard song_info={track} selectMenu={this.showModal} />\n//       );\n//     }\n//     const new_current_single_song = tracks[0].id;\n//     this.setState({\n//       song_list: new_song_list,\n//       song_map: new_song_map,\n//       song_to_dashboard_map: new_song_to_dashboard_map,\n//       current_single_song: new_current_single_song,\n//       current_single_dashboard:\n//         new_song_to_dashboard_map[new_current_single_song],\n//     });\n//     this.closeModal();\n//   };\n\n//   showModal = (menu_type) => {\n//     if (menu_type === \"widget\" && this.state.song_list.length < 1) {\n//       alert(\"No Song Selected...\");\n//     } else {\n//       this.setState({ is_shown: true, menu_type: menu_type });\n//       this.toggleScrollLock();\n//     }\n//   };\n\n//   toggleScrollLock = () => {\n//     document.querySelector(\"html\").classList.toggle(\"scroll-lock\");\n//   };\n\n//   closeModal = () => {\n//     this.setState({ is_shown: false });\n//     this.toggleScrollLock();\n//   };\n\n//   onClickOutside = (event) => {\n//     if (this.modal && this.modal.contains(event.target)) return;\n//     this.closeModal();\n//   };\n//   handleAddWidget = () => {};\n//   handleRemoveWidget = () => {};\n//   render() {\n//     const {\n//       song_list,\n//       song_map,\n//       single,\n//       current_single_song,\n//       current_single_dashboard,\n//       merged_component,\n//       is_shown,\n//       menu_type,\n//     } = this.state;\n//     return (\n//       <div className=\"main-container\">\n//         <Sidebar\n//           selectMenu={this.showModal}\n//           song_list={song_list}\n//           song_map={song_map}\n//           removeSong={this.handleRemoveSong}\n//           onClickSong={this.onChangeCurrentSong}\n//         ></Sidebar>\n//         {single ? current_single_dashboard : merged_component}\n//         {is_shown ? (\n//           <Modal\n//             menuType={menu_type}\n//             modalRef={(n) => (this.modal = n)}\n//             closeModal={this.closeModal}\n//             onClickOutside={this.onClickOutside}\n//             onSubmitSong={this.handleAddSong}\n//             onSubmitWidget={this.handleAddWidget}\n//             songMap={song_map}\n//             songList={song_list}\n//             isSingle={single}\n//             currentSingleSong={current_single_song}\n//           />\n//         ) : null}\n//       </div>\n//     );\n//   }\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = [];\nconst ADD_TO_SONG_LIST = \"ADD_TO_SONG_LIST\";\nconst REMOVE_FROM_SONG_LIST = \"REMOVE_FROM_SONG_LIST\";\nconst songListReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ADD_TO_SONG_LIST:\n      return [...state, ...payload.newSongs];\n    case REMOVE_FROM_SONG_LIST:\n      return [...state].filter((song) => song.id !== payload.id);\n    default:\n      return state;\n  }\n};\nexport default songListReducer;\n","const initalState = { mergedDashboard: { data: {}, widgets: [] } };\nconst ADD_TO_MAP = \"ADD_TO_MAP\";\nconst REMOVE_FROM_MAP = \"REMOVE_FROM_MAP\";\nconst songIdToDashboardReducer = (state = initalState, action) => {\n  const { type, payload } = action;\n  const newState = state;\n  switch (type) {\n    case ADD_TO_MAP:\n      newState[payload.id] = payload.dashboardData;\n      return newState;\n    case REMOVE_FROM_MAP:\n      delete newState[payload.id];\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default songIdToDashboardReducer;\n","const initalState = {\n  showModal: false,\n  modalType: \"song\",\n};\nconst OPEN_MODAL = \"OPEN_MODAL\";\nconst CLOSE_MODAL = \"CLOSE_MODAL\";\nconst modal = (state = initalState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case OPEN_MODAL:\n      return { showModal: true, modalType: payload.modalType };\n    case CLOSE_MODAL:\n      return { ...state, showModal: false };\n    default:\n      return state;\n  }\n};\nexport default modal;\n","const initialState = {\n  data: {},\n  widgets: [],\n};\nconst CHANGE_CURRENT_SONG = \"CHANGE_CURRENT_SONG\";\nconst AUTO_FILL = \"AUTO_FILL\";\nconst CLEAR = \"CLEAR\";\nconst currentSongReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case CHANGE_CURRENT_SONG:\n      return payload.dashboardData;\n    case AUTO_FILL:\n      return payload.dashboardData;\n    case CLEAR:\n      return { data: state.data, widgets: [] };\n    default:\n      return state;\n  }\n};\nexport default currentSongReducer;\n","import SpotifyAPI from \"../../APIs/spotifyAPI\";\nconst tokenReducer = async () => {\n  const token = await SpotifyAPI.getToken();\n  return await token;\n};\nexport default tokenReducer;\n","const initialState = { merge: false };\nconst dashboardReducer = (state = initialState, action) => {\n  const { type } = action;\n  return type === \"TOGGLE_MERGE\" ? { merge: !state.merge } : state;\n};\nexport default dashboardReducer;\n","import { combineReducers } from \"redux\";\nimport songListReducer from \"./songListReducer\";\nimport songIdToDashboardReducer from \"./songIdToDashboardReducer\";\nimport modalReducer from \"./modalReducer\";\nimport currentSongReducer from \"./currentSongReducer\";\nimport tokenReducer from \"./tokenReducer\";\nimport dashboardReducer from \"./dashboardReducer\";\n\nconst rootReducer = combineReducers({\n  songList: songListReducer,\n  songIdToDashboard: songIdToDashboardReducer,\n  modal: modalReducer,\n  currentSong: currentSongReducer,\n  token: tokenReducer,\n  dashboardState: dashboardReducer,\n});\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; // To see state in browser\n\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}